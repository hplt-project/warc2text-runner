txt2re: headache relief for programmers :: regular expression generator
txt
2
re
knowing is obsolete :: regular expression generator
(perl php python java javascript coldfusion c c++ ruby vb vbscript j# c# c++.net vb.net)
 
 
 
Enter the string that you want to use a regular expression on:
1
   
 
Select the elements that you want to extract to run regular expression generator:
2
0
c
&nbsp
0
d
0
3
c
&nbsp
3
d
3
day
03
int
03
:
c
&nbsp
:
J
c
&nbsp
J
w
J
u
c
&nbsp
u
w
u
n
c
&nbsp
n
w
n
var
Jun
word
Jun
month
Jun
:
c
&nbsp
:
2
c
&nbsp
2
d
2
0
c
&nbsp
0
d
0
1
c
&nbsp
1
d
1
7
c
&nbsp
7
d
7
day
17
year
2017
int
2017
ddmmmyyyy
03:Jun:2017
_
c
&nbsp
_
ws
_
"
c
&nbsp
"
T
c
&nbsp
T
w
T
h
c
&nbsp
h
w
h
i
c
&nbsp
i
w
i
s
c
&nbsp
s
s
var
This
word
This
_
c
&nbsp
_
ws
_
i
c
&nbsp
i
w
i
s
c
&nbsp
s
w
s
var
is
word
is
_
c
&nbsp
_
ws
_
a
c
&nbsp
a
w
a
n
c
&nbsp
n
w
n
var
word
an
_
c
&nbsp
_
ws
_
E
c
&nbsp
E
w
E
x
c
&nbsp
x
w
x
a
c
&nbsp
a
w
a
m
c
&nbsp
m
w
m
p
c
&nbsp
p
w
p
l
c
&nbsp
l
w
l
e
c
&nbsp
e
w
e
var
word
Example
!
c
&nbsp
!
"
c
&nbsp
"
string
"This_is_an_Example!"
< Source String
What to click?  
extract any integer in this position
extract this integer (2006) in this position
 
3
Perl regular expression program that extracts the selected elements from the entered string:
[Perl] 
PHP 
Python 
Java 
Javascript 
ColdFusion 
C 
C++ 
Ruby 
VB 
VBScript 
J#.net 
C#.net 
C++.net 
VB.net 
  #!/usr/bin/perl # URL that generated this code: # http://txt2re.com/index.php3?s=03:Jun:2017%20%22This%20is%20an%20Example!%22&-37&17&4 $txt='03:Jun:2017 "This is an Example!"'; $re1='.*?'; # Non-greedy match on filler $re2='(s)'; # Any Single Word Character (Not Whitespace) 1 $re3='.*?'; # Non-greedy match on filler $re4='(?:[a-z][a-z0-9_]*)'; # Uninteresting: var $re5='.*?'; # Non-greedy match on filler $re6='((?:[a-z][a-z0-9_]*))'; # Variable Name 1 $re7='.*?'; # Non-greedy match on filler $re8='((?:[a-z][a-z0-9_]*))'; # Variable Name 2 $re=$re1.$re2.$re3.$re4.$re5.$re6.$re7.$re8; if ($txt =~ m/$re/is) {     $w1=$1;     $var1=$2;     $var2=$3;     print "($w1) ($var1) ($var2) \n"; } #----- # Paste the code into a new perl file. Then in Unix: # $ perl x.pl #-----
&nbsp
 
  home  
  faq  
           Â©2006 mark james ennis  
